<Activity mc:Ignorable="sap sap2010" x:Class="InitiAllSettings" this:InitiAllSettings.in_configFile="Data\Config.xlsx" this:InitiAllSettings.in_configSheets="[{&quot;Settings&quot;,&quot;Constants&quot;}]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:l="clr-namespace:LIB_Proxy;assembly=LIB_Proxy" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Path to the configuration file that defines settings, constants and assets." Name="in_configFile" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Names of the sheets corresponding to settings and constants in the configuration file." Name="in_configSheets" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="out_config" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1410.4,3499.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetAllSettings_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>LIB_Proxy</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Security.Cryptography.X509Certificates</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="74">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>LIB_Proxy</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Windows.Extensions</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.X509Certificates</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Inicialize, preencha e gere um Dicionário de configuração para ser usado em todo o projeto.&#xA;As configurações e constantes são lidas no arquivo de configuração local e os ativos são buscados no Orchestrator.&#xA;Os valores de ativos substituem as configurações e os valores constantes se forem definidos com o mesmo nome." DisplayName="Initialize All Settings" sap:VirtualizedContainerService.HintSize="662.4,3434.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="caminhoArquivoAuxiliar" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_certificados" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Initialize All Settings" sap:VirtualizedContainerService.HintSize="600,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[&quot;[INICIO] InitAllSettings - Inicializando configuracoes&quot;]" />
    <Assign DisplayName="Assing - out_Config " sap:VirtualizedContainerService.HintSize="600,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_config]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[New Dictionary(of String, Object)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each - configuration sheet" sap:VirtualizedContainerService.HintSize="600,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_configSheets]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="Sheet" />
          </ActivityAction.Argument>
          <Sequence sap2010:Annotation.AnnotationText="Le as configurações e constantes do arquivo de configuração e adiciona ao dicionário Config." DisplayName="Get local settings and constants" sap:VirtualizedContainerService.HintSize="544,705.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dt_settingsAndConstants" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_settingsAndConstants]" DisplayName="Read range - Settings e Constants sheets" sap:VirtualizedContainerService.HintSize="502,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[Sheet]" WorkbookPath="[in_configFile]" />
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_settingsAndConstants]" DisplayName="For each - linha de configuracao" sap:VirtualizedContainerService.HintSize="502,490" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                  </ActivityAction.Argument>
                  <If sap2010:Annotation.AnnotationText="Le apenas linhas nao vazias" Condition="[Not String.IsNullOrWhiteSpace(row(&quot;Name&quot;).ToString.Trim)]" DisplayName="If - linha nao vazia" sap:VirtualizedContainerService.HintSize="468,300" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Assign DisplayName="Add Config key/value pair" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[out_config(Row("Name").ToString.Trim)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[Row("Value")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <TryCatch DisplayName="Try - initializing assets" sap:VirtualizedContainerService.HintSize="600,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="Busca os assets listados no orchestrator presentes dentro do arquivo de configuração" DisplayName="Get Orchestrator assets" sap:VirtualizedContainerService.HintSize="548,1036" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="dt_assets" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_assets]" DisplayName="Read range - Assets sheet" sap:VirtualizedContainerService.HintSize="486,88" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Assets" WorkbookPath="[in_configFile]" />
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_assets]" DisplayName="For each - linha de asset" sap:VirtualizedContainerService.HintSize="486,766" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                </ActivityAction.Argument>
                <TryCatch DisplayName="Try - obter assets do Orchestrator" sap:VirtualizedContainerService.HintSize="452,650" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Obter asset do orchestrator" sap:VirtualizedContainerService.HintSize="400,380" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="ui:GenericValue" Name="assetValue" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[row(&quot;Asset&quot;).ToString]" CacheStrategy="None" DisplayName="Get Orchestrator asset" FolderPath="[row(&quot;OrchestratorAssetFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="338,168" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
                        <ui:GetRobotAsset.Value>
                          <OutArgument x:TypeArguments="ui:GenericValue">[assetValue]</OutArgument>
                        </ui:GetRobotAsset.Value>
                      </ui:GetRobotAsset>
                      <Assign DisplayName="Assign - asset value in Config" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_23">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[out_config(row("Name").ToString)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[assetValue]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="418,487" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                        </ActivityAction.Argument>
                        <If sap2010:Annotation.AnnotationText="Lança uma exceção caso o recurso seja especificado no arquivo de configuração, mas não pôde ser carregado do orquestrator." Condition="[Not String.IsNullOrWhiteSpace(Row(&quot;Name&quot;).ToString.Trim)]" DisplayName="If asset name is specified, but it cannot be retrieved" sap:VirtualizedContainerService.HintSize="412,418" sap2010:WorkflowViewState.IdRef="If_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Throw DisplayName="Throw - AssetFailedToLoad Exception" Exception="[new Exception(&quot;Carregamento do asset &quot; + Row(&quot;Asset&quot;).ToString + &quot; falhou: &quot; + Exception.Message)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
                          </If.Then>
                        </If>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="552,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
            </ActivityAction.Argument>
            <Rethrow DisplayName="Rethrow -  exeção de carregamento de assets" sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <Sequence DisplayName="Criação de pastas" sap:VirtualizedContainerService.HintSize="600,840" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow - CriarPastaTemp" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Workflows\Auxiliar\CriarPasta.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_pastaAserCriada">Data/Temp</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_nomePasta">temporária</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow - CriarPastaExScreenshots" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\Auxiliar\CriarPasta.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_pastaAserCriada">[out_config("exScreenshotsFolderPath").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_nomePasta">Screenshots de exceção</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow - CriarPastaEvidenciaLogsPython" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Workflows\Auxiliar\CriarPasta.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_pastaAserCriada">[out_config("pastaEvidenciaPython").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_nomePasta">Evidências de log python</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow - CriarPastasOutputScripts" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Workflows\Auxiliar\CriarPasta.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_pastaAserCriada">[out_config("pastaOutputScript").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_nomePasta">Evidências de log python</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow - CriarPastaRelatorioExecucao" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Workflows\Auxiliar\CriarPasta.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_pastaAserCriada">[out_config("pastaRelatorioExecucao").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_nomePasta">Evidências de log python</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="Adição de informação na planilha com informações do certificado" sap:VirtualizedContainerService.HintSize="600,1712" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:RetryScope sap2010:Annotation.AnnotationText="Mantido dentro do retry scope para  manter a resiliência da automação no caso de falha na conexão com o orchestrator" DisplayName="Retry Scope - Baixar arquivos do storage bucket " sap:VirtualizedContainerService.HintSize="537.6,762.4" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[CInt(out_config(&quot;retryNumberGeneric&quot;).ToString)]" RetryInterval="[TimeSpan.Parse(out_config(&quot;delayCurto&quot;).ToString)]">
        <ui:RetryScope.ActivityBody>
          <ActivityAction>
            <Sequence DisplayName="Baixar arquivos do storage bucket" sap:VirtualizedContainerService.HintSize="496,542.4" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="[out_config(&quot;gsuiteJsonPathLocation&quot;).ToString]" DisplayName="Download Storage File - baixar Gsuite Json" sap:VirtualizedContainerService.HintSize="433.6,134.4" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_5" Path="[out_config(&quot;gsuiteJsonKeyPath&quot;).ToString]" StorageBucketName="[out_config(&quot;gsuiteJsonStorageName&quot;).ToString]" />
              <Assign DisplayName="Assign - caminho local arquivo auxiliar" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_24">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[caminhoArquivoAuxiliar]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[out_config("pastaTemp").ToString+"\"+ out_config("arquivoAuxiliarRegras").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="[caminhoArquivoAuxiliar]" DisplayName="Download Storage File - Arquivo auxiliar" sap:VirtualizedContainerService.HintSize="433.6,134.4" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_6" Path="[out_config(&quot;arquivoAuxiliarRegras&quot;).ToString]" StorageBucketName="[out_config(&quot;nomeStorageBucket&quot;).ToString]" />
            </Sequence>
          </ActivityAction>
        </ui:RetryScope.ActivityBody>
        <ui:RetryScope.Condition>
          <ActivityFunc x:TypeArguments="x:Boolean" />
        </ui:RetryScope.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:RetryScope>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName=" Invoke Workflow - LerDocumentoAuxiliar" sap:VirtualizedContainerService.HintSize="537.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Workflows\Excel\LerDocumentoAuxiliar.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_caminhoArquivoAuxiliar">[caminhoArquivoAuxiliar]</InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[out_config]</InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_certificados">[dt_certificados]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <l:ProxyEnable DisplayName="ProxyEnable - InitAllSettings" sap:VirtualizedContainerService.HintSize="537.6,90.4" sap2010:WorkflowViewState.IdRef="ProxyEnable_3" In_proxyEnable="[CInt( out_config(&quot;proxyEnable&quot;))]" />
      <If Condition="[CBool(out_config(&quot;validacaoSiteRobo&quot;))]" DisplayName="If - validação do site da caixa na automação" sap:VirtualizedContainerService.HintSize="538,52" sap2010:WorkflowViewState.IdRef="If_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,202.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Workflows\Auxiliar\ValidacaoSiteCaixa.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Workflows\Auxiliar\ValidacaoSiteCaixa.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[out_config]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,232" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - Validação site no gentil" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;A validação do site já foi feita pelo gentil&quot;]" />
          </Sequence>
        </If.Else>
      </If>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow - validacaoCertificadosDigitais" sap:VirtualizedContainerService.HintSize="538,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Workflows\Auxiliar\validacaoCertificadosDigitais.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[out_config]</InArgument>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_certificados">[dt_certificados]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow - RecuperarPosicaoCertificados" sap:VirtualizedContainerService.HintSize="538,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Workflows\Auxiliar\RecuperarPosicaoCertificados.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[out_config]</InArgument>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_certificados">[dt_certificados]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_certificados]" DisplayName="Write Range Workbook - Atualiza arquivo excel" sap:VirtualizedContainerService.HintSize="538,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[out_config(&quot;abaCertificados&quot;).ToString]" WorkbookPath="[caminhoArquivoAuxiliar]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message - Initialize All Settings finalizado" sap:VirtualizedContainerService.HintSize="600,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;[FIM] InitAllSettings - Configuracoes carregadas&quot;]" />
  </Sequence>
</Activity>